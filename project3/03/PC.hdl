// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    // increment last cycle value
    Inc16(in= regOut, out= incRegOut);
    
    // if inc(t):   out(t+1) = out(t) + 1
    Mux16(a= regOut, b= incRegOut, sel= inc, out= incOrOut);

    // if load(t):  out(t+1) = in(t)
    Mux16(a= incOrOut, b= in, sel= load, out= inOrIncOrOut);

    // Zeroed value
    And16(a= in, b= false, out= reseted);

    // if reset(t): out(t+1) = 0
    Mux16(a= inOrIncOrOut, b= reseted, sel= reset, out= inOrIncOrOutOrReseted);

    Register(in=inOrIncOrOutOrReseted, load= true, out= regOut, out= out);
}